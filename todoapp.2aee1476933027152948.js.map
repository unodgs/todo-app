{"version":3,"sources":["webpack:///./src/store/todo-actions.ts","webpack:///./src/theme.ts","webpack:///./src/model/todo-item.ts","webpack:///./src/components/edit.tsx","webpack:///./src/store/todo-reducer.ts","webpack:///./src/index.tsx","webpack:///./src/view/app.tsx","webpack:///./src/view-components/header.tsx","webpack:///./src/view-components/todo-list.tsx","webpack:///./src/view-components/todo-list-item.tsx","webpack:///./src/components/checkbox.tsx","webpack:///./src/common/unionize.ts","webpack:///./src/view-components/todo-edit.tsx","webpack:///./src/view-components/todo-add.tsx","webpack:///./src/view-components/filters.tsx","webpack:///./src/index.css?cfe4","webpack:///./src/index.css","webpack:///./src/store/store.ts","webpack:///./src/service/services.ts","webpack:///./src/service/todo-local-service.ts"],"names":["todoActions","unionize","ADD_ITEM","ofType","REMOVE_ITEM","UPDATE_ITEM","EDIT_ITEM","SET_ITEMS","SET_ACTIVE_FILTER","loadTodos","dispatch","getState","services","items","todoService","list","addTodo","title","id","makeTodoItem","editTodo","item","todo","find","it","updateTodo","removeTodo","markCompleted","completed","setFilter","filter","theme","placeholderColor","mainColor","mainHoverColor","itemHoverColor","itemBorderColor","errorColor","createdAt","Date","getTime","Edit","onEnter","onEscape","initialValue","fontSize","value","setValue","useState","error","setError","Box","component","width","paddingLeft","paddingRight","border","props","autoFocus","placeholder","onChange","e","target","onKeyDown","keyCode","trim","getItemsLeft","reduce","acc","curr","initialState","activeFilter","itemsLeft","editItemId","todoReducer","state","action","match","updatedItem","map","default","createServices","store","configureStore","render","StrictMode","Provider","App","document","getElementById","useDispatch","useSelector","filteredItems","getFilteredItems","maxWidth","margin","Header","padding","marginTop","boxShadow","TodoAdd","TodoList","Filters","textAlign","paddingBottom","height","overflowY","TodoListItem","key","editMode","Col","hoverBackgroundColor","Row","alignItems","color","hoverColor","CheckBox","checked","flexGrow","textDecoration","TodoEdit","className","onClick","paddingTop","date","checkClass","record","tag","marginBottom","FilterItem","active","onFilter","marginRight","marginLeft","borderRadius","borderTop","justifyContent","api","content","__esModule","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","rootReducer","createRootReducer","middlewares","applyMiddleware","withExtraArgument","enhancer","compose","createStore","combineReducers","TodoLocalService","localStorage","getItem","TODO_LIST_KEY","JSON","parse","json","stringify","setItem","this","getItems","length","Promise","resolve","itemId","getNextItemId","saveItems"],"mappings":"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","file":"todoapp.2aee1476933027152948.js","sourcesContent":["import { unionize } from \"../common/unionize\";\nimport { ofType, UnionOf } from \"unionize\";\nimport { makeTodoItem, TodoId, TodoItem } from \"../model/todo-item\";\nimport { ThunkResult } from \"./store\";\nimport { TodoFilter } from \"../model/todo-filter\";\n\nexport const todoActions = unionize({\n    ADD_ITEM: ofType<TodoItem>(),\n    REMOVE_ITEM: ofType<TodoId>(),\n    UPDATE_ITEM: ofType<TodoItem>(),\n    EDIT_ITEM: ofType<TodoId | null>(),\n    SET_ITEMS: ofType<TodoItem[]>(),\n    SET_ACTIVE_FILTER: ofType<TodoFilter>()\n});\n\nexport type TodoAction = UnionOf<typeof todoActions>;\n\nexport const loadTodos = (): ThunkResult<Promise<void>> =>\n    async (dispatch, getState, services) => {\n        const items = await services.todoService.list();\n        dispatch(todoActions.SET_ITEMS(items));\n    };\n\n\nexport const addTodo = (title: string): ThunkResult<Promise<void>> =>\n    async (dispatch, getState, services) => {\n        const id = await services.todoService.addTodo(title);\n        await dispatch(todoActions.ADD_ITEM(makeTodoItem(id, title)));\n    };\n\nexport const editTodo = (id: TodoId, title: string): ThunkResult<Promise<void>> =>\n    async (dispatch, getState, services) => {\n        const item = getState().todo.items\n            .find(it => it.id === id);\n        \n        if (item) {\n            item.title = title;\n            await services.todoService.updateTodo(item);\n            dispatch(todoActions.UPDATE_ITEM(item));\n        }\n    };\n\nexport const removeTodo = (id: TodoId): ThunkResult<Promise<void>> => \n    async (dispatch, getState, services) => {\n        await services.todoService.removeTodo(id);\n        dispatch(todoActions.REMOVE_ITEM(id));\n    }\n\nexport const markCompleted = (id: TodoId, completed: boolean): ThunkResult<Promise<void>> =>\n    async (dispatch, getState, services) => {\n        const item = getState().todo.items\n            .find(it => it.id === id);\n        \n        if (item) {\n            item.completed = completed;\n            await services.todoService.updateTodo(item);\n            dispatch(todoActions.UPDATE_ITEM(item));\n        }\n    };\n\nexport const setFilter = (filter: TodoFilter): ThunkResult<void> =>\n    (dispatch) => {\n        dispatch(todoActions.SET_ACTIVE_FILTER(filter));\n    }\n","export const theme = {\n    placeholderColor: \"rgb(217, 217, 217)\",\n    mainColor: \"#dadada\",\n    mainHoverColor: \"#aaaaaa\",\n    itemHoverColor: \"rgba(0, 255, 0, 0.05)\",\n    itemBorderColor: \"#26a826\",\n    errorColor: \"#e74343\"\n}","export type TodoId = string;\n\nexport interface TodoItem {\n    id: TodoId;\n    title: string;\n    createdAt: number;\n    completed: boolean;\n}\n\nexport function makeTodoItem(id: TodoId, title: string) {\n    return {\n        id,\n        title,\n        createdAt: new Date().getTime(),\n        completed: false\n    }\n}","import React, { useState } from \"react\";\nimport { Box } from \"jsxstyle\";\nimport { theme } from \"../theme\";\n\nexport type OnEnter = (value: string) => void; \nexport type OnEscape = () => void; \n\ninterface EditProps {\n    onEnter: OnEnter;\n    onEscape?: OnEscape;\n    initialValue: string;\n    fontSize?: number;\n}\n\nexport const Edit: React.FC<EditProps> = ({ onEnter, onEscape, initialValue, fontSize }) => {\n    const [value, setValue] = useState(initialValue);\n    const [error, setError] = useState(false);\n\n    return <Box\n        component=\"input\"\n        width=\"100%\"\n        fontSize={fontSize || \"16px\"}\n        paddingLeft=\"10px\"\n        paddingRight=\"10px\"\n        border={`1px solid ${error ? theme.errorColor : theme.mainColor}`}\n        placeholderColor={theme.placeholderColor}\n        props={{\n            autoFocus: true,\n            placeholder: \"Task description\",\n            value,\n            onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n                setValue(e.target.value);\n                setError(false);\n            },\n            onKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => {\n                if (e.keyCode === 13) {\n                    if (value.trim() === \"\") {\n                        setError(true);\n                    } else {\n                        onEnter(value);\n                        setValue(\"\");\n                    }\n                } else if (e.keyCode === 27 && onEscape) {\n                    onEscape();\n                }\n            }\n        }}\n    />;\n}\n","import { TodoState } from \"./todo-state\";\nimport { TodoAction, todoActions } from \"./todo-actions\";\nimport { TodoItem } from \"../model/todo-item\";\nimport { TodoFilter } from \"../model/todo-filter\";\n\nexport const initialState: TodoState = {\n    items: [],\n    activeFilter: \"all\",\n    itemsLeft: 0,\n    editItemId: null\n};\n\nexport const todoReducer = (state: TodoState = initialState, action: TodoAction): TodoState => {\n    return todoActions.match(action, {\n        ADD_ITEM: item => {\n            const items = [item, ...state.items];\n            return {\n                ...state,\n                items,\n                itemsLeft: getItemsLeft(items) \n            }\n        },\n        UPDATE_ITEM: updatedItem => {\n            const items = state.items.map(\n                item => item.id === updatedItem.id ? updatedItem : item\n            ); \n            return {\n                ...state,\n                items,\n                itemsLeft: getItemsLeft(items)\n            }\n        },\n        REMOVE_ITEM: id => {\n            const items = state.items.filter(\n                item => item.id !== id\n            );\n            return {\n                ...state,\n                items,\n                itemsLeft: getItemsLeft(items)\n            }\n        },\n        EDIT_ITEM: id => ({ ...state, editItemId: id }),\n        SET_ITEMS: items => ({\n            ...state,\n            items,\n            itemsLeft: getItemsLeft(items)\n        }),\n        SET_ACTIVE_FILTER: activeFilter => ({\n           ...state,\n           activeFilter \n        }),\n        default: () => state,\n    });\n};\n\nfunction getItemsLeft(items: TodoItem[]): number {\n    return items.reduce((acc, curr) => !curr.completed ? acc + 1 : acc, 0);\n}\n\nexport function getFilteredItems(items: TodoItem[], filter: TodoFilter): TodoItem[] {\n    return items.filter(item => {\n        if (filter === \"active\") {\n            return !item.completed;\n        } else if (filter === \"completed\") {\n            return item.completed;\n        }\n        return item;\n    })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from \"./view/app\";\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport \"./index.css\";\nimport { configureStore } from \"./store/store\";\nimport { createServices } from \"./service/services\";\nimport { Provider } from \"react-redux\";\nimport { loadTodos } from \"./store/todo-actions\";\n\nconst services = createServices();\n\nconst store = configureStore(services);\nstore.dispatch(loadTodos());\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import React from \"react\";\nimport { Box } from \"jsxstyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../store/store\";\nimport { Header } from \"../view-components/header\";\nimport { TodoList } from \"../view-components/todo-list\";\nimport { TodoAdd } from \"../view-components/todo-add\";\nimport { Filters } from \"../view-components/filters\";\nimport { addTodo } from \"../store/todo-actions\";\nimport { getFilteredItems } from \"../store/todo-reducer\";\n\nexport const App: React.FC = () => {\n    const dispatch = useDispatch();\n    const items = useSelector((state: RootState) => state.todo.items);\n    const filter = useSelector((state: RootState) => state.todo.activeFilter);\n    const filteredItems = getFilteredItems(items, filter);\n    \n    return <Box maxWidth={800} margin=\"0 auto\">\n        <Header title=\"TODO APP\"/>\n        <Box\n            padding=\"10px\"\n            margin=\"30px\"\n            marginTop=\"10px\"\n            boxShadow=\"0px 0px 13px 1px rgba(0,0,0,0.15)\">\n            <TodoAdd onEnter={title => dispatch(addTodo(title))}/>\n            <TodoList items={filteredItems}/>\n            <Filters/>\n        </Box>\n    </Box>;\n\n}\n","import React from \"react\";\nimport { Box } from \"jsxstyle\";\n\nexport const Header: React.FC<{ title: string }> = ({ title }) => {\n    return <Box\n        textAlign=\"center\"\n        fontSize=\"24px\"\n        paddingBottom=\"5px\">\n        {title}\n    </Box>\n}\n","import React from \"react\";\nimport { Box } from \"jsxstyle\";\nimport { TodoItem } from \"../model/todo-item\";\nimport { TodoListItem } from \"./todo-list-item\";\n\nexport const TodoList: React.FC<{ items: TodoItem[] }> = ({ items }) => {\n    return <Box height={400} overflowY={\"auto\"}>\n        {items.map(item => <TodoListItem key={item.id} item={item}/>)}\n    </Box>\n}\n","import React from \"react\";\nimport { Box, Col, Row } from \"jsxstyle\";\nimport TimeAgo from \"react-timeago\";\nimport { TodoItem } from \"../model/todo-item\";\nimport { CheckBox } from \"../components/checkbox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { markCompleted, removeTodo, todoActions } from \"../store/todo-actions\";\nimport { RootState } from \"../store/store\";\nimport { theme } from \"../theme\";\nimport { TodoEdit } from \"./todo-edit\";\n\nexport const TodoListItem: React.FC<{ item: TodoItem }> = ({ item }) => {\n    const dispatch = useDispatch();\n    const editMode = useSelector((state: RootState) => state.todo.editItemId === item.id);\n    \n    return <Col padding=\"10px 0px\" hoverBackgroundColor={theme.itemHoverColor}>\n        <Row alignItems=\"center\">\n            <Box\n                paddingLeft={10}\n                textAlign=\"center\"\n                fontSize=\"24px\"\n                color={theme.mainColor}\n                hoverColor={theme.mainHoverColor}>\n                <CheckBox checked={item.completed} onChange={checked => {\n                    dispatch(markCompleted(item.id, checked));\n                }}/>\n            </Box>\n            <Box\n                flexGrow={2}\n                paddingLeft=\"10px\"\n                paddingRight=\"10px\"\n                textDecoration={item.completed ? \"line-through\" : \"none\"}>\n                {editMode ? <TodoEdit item={item}/> : item.title}\n            </Box>\n            <Box\n                fontSize=\"18px\"\n                paddingRight={10}\n                color={theme.mainColor}\n                hoverColor={theme.mainHoverColor}>\n                <i className=\"fas fa-edit\" onClick={\n                    () => dispatch(todoActions.EDIT_ITEM(item.id))\n                }/>\n            </Box>\n            <Box\n                fontSize=\"18px\"\n                paddingRight={10}\n                color={theme.mainColor}\n                hoverColor={theme.mainHoverColor}>\n                <i className=\"fas fa-times\" onClick={() => {\n                    dispatch(todoActions.EDIT_ITEM(null));\n                    dispatch(removeTodo(item.id));\n                }}/>\n            </Box>\n        </Row>\n        <Box paddingLeft={10} paddingTop={5} fontSize=\"10px\">\n            <TimeAgo date={item.createdAt}/>\n        </Box>\n    </Col>\n}\n","import React from \"react\";\n\ninterface CheckboxProps {\n    checked: boolean;\n    onChange: (checked: boolean) => void;\n}\n\nexport const CheckBox: React.FC<CheckboxProps> = ({ checked, onChange }) => {\n    const checkClass = checked ? \"fa-dot-circle\" : \"fa-circle\";\n    return <i\n        className={`far ${checkClass}`}\n        onClick={() => onChange(!checked)}/>;\n}\n","import { unionize as originalUnionize, SingleValueRec } from 'unionize';\n\nexport function unionize<Record extends SingleValueRec>(record: Record) {\n    return originalUnionize(record, {\n        tag: 'type',\n        value: 'payload'\n    });\n}\n\n","import React from \"react\";\nimport { Edit } from \"../components/edit\";\nimport { editTodo, todoActions } from \"../store/todo-actions\";\nimport { useDispatch } from \"react-redux\";\nimport { TodoItem } from \"../model/todo-item\";\n\ninterface TodoEditProps {\n    item: TodoItem;\n}\n\nexport const TodoEdit: React.FC<TodoEditProps> = ({ item }) => {\n    const dispatch = useDispatch();\n\n    return <Edit initialValue={item.title} onEnter={title => {\n        dispatch(editTodo(item.id, title));\n        dispatch(todoActions.EDIT_ITEM(null));\n    }} onEscape={() =>\n        dispatch(todoActions.EDIT_ITEM(null))\n    }/>\n}\n","import React from \"react\";\nimport { Row } from \"jsxstyle\";\nimport { Edit, OnEnter } from \"../components/edit\";\n\nexport const TodoAdd: React.FC<{ onEnter: OnEnter }> = ({ onEnter }) => {\n    return <Row marginBottom=\"10px\" height=\"50px\">\n        <Edit initialValue={\"\"} onEnter={onEnter} fontSize={24}/>\n    </Row>;\n}\n","import React from \"react\";\nimport { Box, Row } from \"jsxstyle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../store/todo-actions\";\nimport { RootState } from \"../store/store\";\nimport { theme } from \"../theme\";\n\ninterface FilterItemProps {\n    title: string;\n    active: boolean;\n    onFilter: () => void\n}\n\nconst FilterItem: React.FC<FilterItemProps> = ({ title, active, onFilter }) => {\n    return <Box\n        paddingLeft=\"10px\"\n        paddingRight=\"10px\"\n        marginRight=\"5px\"\n        marginLeft=\"5px\"\n        border={active ? `1px solid ${theme.itemBorderColor}` : \"1px solid transparent\"}\n        borderRadius=\"3px\"\n        hoverBackgroundColor={theme.itemHoverColor}\n        props={{ onClick: onFilter }}>\n        {title}\n    </Box>\n}\n\nexport const Filters: React.FC = () => {\n    const dispatch = useDispatch();\n    const activeFilter = useSelector((state: RootState) => state.todo.activeFilter);\n    const itemsLeft = useSelector((state: RootState) => state.todo.itemsLeft);\n\n    return <Row borderTop={`1px solid ${theme.mainColor}`} paddingTop=\"10px\" marginTop={10}>\n        <Box width=\"30%\">{`${itemsLeft} items left`}</Box>\n        <Row flexGrow={2} justifyContent=\"center\">\n            <FilterItem\n                title={\"All\"}\n                active={activeFilter === \"all\"}\n                onFilter={() => dispatch(setFilter(\"all\"))}/>\n            <FilterItem\n                title={\"Active\"}\n                active={activeFilter === \"active\"}\n                onFilter={() => dispatch(setFilter(\"active\"))}/>\n            <FilterItem\n                title={\"Completed\"}\n                active={activeFilter === \"completed\"}\n                onFilter={() => dispatch(setFilter(\"completed\"))}/>\n        </Row>\n        <Box width=\"30%\"/>\n    </Row>\n}\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Proxima+Nova);\"]);\n// Module\nexports.push([module.id, \"html {\\n    width: 100vw;\\n    height: 100vh;\\n    font-family: proxima-nova, sans-serif;\\n}\\n\\nbody {\\n    padding: 0;\\n    color: rgb(102, 102, 102);\\n}\\n\\ninput {\\n    outline: none;\\n}\\n\\n* {\\n    box-sizing: border-box;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Action, applyMiddleware, combineReducers, compose, createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware, { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { ServiceRepository } from \"../service/services\";\nimport { todoReducer } from \"./todo-reducer\";\n\nconst devMode = process.env.NODE_ENV === 'development';\n\nexport type RootState = ReturnType<ReturnType<typeof createRootReducer>>;\n\nexport type RootStore = Store<RootState, Action> & { dispatch: ThunkDispatch<RootState, ServiceRepository, Action> };\n\nexport type ThunkResult<R> = ThunkAction<R, RootState, ServiceRepository, Action>;\n\nexport function configureStore(services: ServiceRepository): RootStore {\n    const rootReducer = createRootReducer(services);\n\n    const middlewares = applyMiddleware(\n        thunkMiddleware.withExtraArgument(services)\n    );\n\n    const enhancer = devMode ? composeWithDevTools(middlewares) : compose(middlewares);\n    return createStore(rootReducer, enhancer);\n}\n\nconst createRootReducer = (services: ServiceRepository) => combineReducers({\n    todo: todoReducer\n});\n","import { TodoLocalService } from \"./todo-local-service\";\n\nexport type ServiceRepository = ReturnType<typeof createServices>;\n\nexport const createServices = () => {\n    const todoService = new TodoLocalService();\n\n    return {\n        todoService\n    };\n};\n","import { makeTodoItem, TodoId, TodoItem } from \"../model/todo-item\";\nimport { TodoService } from \"./todo-service\";\n\nexport class TodoLocalService implements TodoService {\n    private static TODO_LIST_KEY = \"todo_list\";\n    \n    private getItems(): TodoItem[] {\n        const items = localStorage.getItem(TodoLocalService.TODO_LIST_KEY) || \"[]\";\n        return JSON.parse(items);\n    }\n    \n    private saveItems(items: TodoItem[]) {\n        const json = JSON.stringify(items);\n        localStorage.setItem(TodoLocalService.TODO_LIST_KEY, json);\n    }\n    \n    private getNextItemId(): TodoId {\n        const items = this.getItems();\n        return `todo/${items.length + 1}`;\n    }\n    \n    addTodo(title: string): Promise<TodoId> {\n        return new Promise(resolve => {\n            const itemId = this.getNextItemId();\n            const items = [\n                makeTodoItem(itemId, title),\n                ...this.getItems()\n            ];\n            this.saveItems(items);\n            resolve(itemId);\n        });\n    }\n    \n    updateTodo(todo: TodoItem): Promise<void> {\n        return new Promise(resolve => {\n            const items = this.getItems().map(\n                item => item.id === todo.id ? todo : item\n            );\n            this.saveItems(items);\n            resolve();\n        });\n    }\n\n    removeTodo(id: TodoId): Promise<void> {\n        return new Promise(resolve => {\n            const items = this.getItems().filter(item => item.id !== id);\n            this.saveItems(items);\n            resolve();\n        })\n    }\n\n    list(): Promise<TodoItem[]> {\n        return new Promise(resolve => {\n            const items = this.getItems();\n            resolve(items);\n        })\n    }\n\n}\n"],"sourceRoot":""}